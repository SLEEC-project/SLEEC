/**
 * generated by Xtext 2.25.0
 */
package circus.robocalc.sleec.sLEEC.impl;

import circus.robocalc.sleec.sLEEC.Defblock;
import circus.robocalc.sleec.sLEEC.RuleBlock;
import circus.robocalc.sleec.sLEEC.SLEECPackage;
import circus.robocalc.sleec.sLEEC.Specification;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Specification</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link circus.robocalc.sleec.sLEEC.impl.SpecificationImpl#getDefBlock <em>Def Block</em>}</li>
 *   <li>{@link circus.robocalc.sleec.sLEEC.impl.SpecificationImpl#getRuleBlock <em>Rule Block</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SpecificationImpl extends MinimalEObjectImpl.Container implements Specification
{
  /**
   * The cached value of the '{@link #getDefBlock() <em>Def Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefBlock()
   * @generated
   * @ordered
   */
  protected Defblock defBlock;

  /**
   * The cached value of the '{@link #getRuleBlock() <em>Rule Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuleBlock()
   * @generated
   * @ordered
   */
  protected RuleBlock ruleBlock;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpecificationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SLEECPackage.Literals.SPECIFICATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Defblock getDefBlock()
  {
    return defBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefBlock(Defblock newDefBlock, NotificationChain msgs)
  {
    Defblock oldDefBlock = defBlock;
    defBlock = newDefBlock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SLEECPackage.SPECIFICATION__DEF_BLOCK, oldDefBlock, newDefBlock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefBlock(Defblock newDefBlock)
  {
    if (newDefBlock != defBlock)
    {
      NotificationChain msgs = null;
      if (defBlock != null)
        msgs = ((InternalEObject)defBlock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SLEECPackage.SPECIFICATION__DEF_BLOCK, null, msgs);
      if (newDefBlock != null)
        msgs = ((InternalEObject)newDefBlock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SLEECPackage.SPECIFICATION__DEF_BLOCK, null, msgs);
      msgs = basicSetDefBlock(newDefBlock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SLEECPackage.SPECIFICATION__DEF_BLOCK, newDefBlock, newDefBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RuleBlock getRuleBlock()
  {
    return ruleBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRuleBlock(RuleBlock newRuleBlock, NotificationChain msgs)
  {
    RuleBlock oldRuleBlock = ruleBlock;
    ruleBlock = newRuleBlock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SLEECPackage.SPECIFICATION__RULE_BLOCK, oldRuleBlock, newRuleBlock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRuleBlock(RuleBlock newRuleBlock)
  {
    if (newRuleBlock != ruleBlock)
    {
      NotificationChain msgs = null;
      if (ruleBlock != null)
        msgs = ((InternalEObject)ruleBlock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SLEECPackage.SPECIFICATION__RULE_BLOCK, null, msgs);
      if (newRuleBlock != null)
        msgs = ((InternalEObject)newRuleBlock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SLEECPackage.SPECIFICATION__RULE_BLOCK, null, msgs);
      msgs = basicSetRuleBlock(newRuleBlock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SLEECPackage.SPECIFICATION__RULE_BLOCK, newRuleBlock, newRuleBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SLEECPackage.SPECIFICATION__DEF_BLOCK:
        return basicSetDefBlock(null, msgs);
      case SLEECPackage.SPECIFICATION__RULE_BLOCK:
        return basicSetRuleBlock(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SLEECPackage.SPECIFICATION__DEF_BLOCK:
        return getDefBlock();
      case SLEECPackage.SPECIFICATION__RULE_BLOCK:
        return getRuleBlock();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SLEECPackage.SPECIFICATION__DEF_BLOCK:
        setDefBlock((Defblock)newValue);
        return;
      case SLEECPackage.SPECIFICATION__RULE_BLOCK:
        setRuleBlock((RuleBlock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SLEECPackage.SPECIFICATION__DEF_BLOCK:
        setDefBlock((Defblock)null);
        return;
      case SLEECPackage.SPECIFICATION__RULE_BLOCK:
        setRuleBlock((RuleBlock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SLEECPackage.SPECIFICATION__DEF_BLOCK:
        return defBlock != null;
      case SLEECPackage.SPECIFICATION__RULE_BLOCK:
        return ruleBlock != null;
    }
    return super.eIsSet(featureID);
  }

} //SpecificationImpl
